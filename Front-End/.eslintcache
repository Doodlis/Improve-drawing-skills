[{"C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\App.js":"1","C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\drawingsPage.js":"2","C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\imageUploadsPage.js":"3","C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\reportWebVitals.js":"4","C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\index.js":"5","C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\drawings.js":"6","C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\statistics.js":"7"},{"size":406,"mtime":1608217358984,"results":"8","hashOfConfig":"9"},{"size":392,"mtime":1608140730490,"results":"10","hashOfConfig":"9"},{"size":2676,"mtime":1608159697802,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1608064684849,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1608064684849,"results":"13","hashOfConfig":"9"},{"size":4552,"mtime":1608219705653,"results":"14","hashOfConfig":"9"},{"size":4650,"mtime":1608219675861,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dk8cmr",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\App.js",["31","32","33"],"C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\drawingsPage.js",["34"],"C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\imageUploadsPage.js",[],"C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\reportWebVitals.js",[],"C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\index.js",[],"C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\drawings.js",["35"],"import React, { useState, useEffect } from 'react';\r\nimport { Router, Link } from \"@reach/router\";\r\nimport ImageUploading from 'react-images-uploading';\r\nimport axios from 'axios';\r\n// import { Menu, Dropdown, Button, message, Space, Tooltip } from 'antd';\r\n// import { DownOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nexport function Drawings() {\r\n  const [images, setImages] = useState([]);\r\n  const maxNumber = 1;\r\n\r\n  const [categoriesAndItems, setCategoriesAndItems] = useState({});\r\n  const [selectedCategory, setSelectedCategory] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(\"\");\r\n  const [score, setScore] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    axios.get('http://localhost:5000/drawings/GetCategories')\r\n    .then(function (response) {\r\n      // handle success\r\n      setCategoriesAndItems(response.data);\r\n\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    });\r\n  }, []);\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setSelectedCategory(categoriesAndItems[category]);\r\n  };\r\n\r\n  const handleItemClick = (item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  const onChange = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    setImages(imageList);\r\n  };\r\n\r\n  const onImageGetScores = (e) => {\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append(\r\n      \"image\",\r\n      images[0].file,\r\n      selectedItem\r\n    );\r\n\r\n    // Request made to the backend api\r\n    // Send formData object\r\n    axios.post(\"http://localhost:5000/drawings/PostImage\", formData)\r\n    .then(function (response) {\r\n      // handle success\r\n      setScore(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"score\">Scores</Link>\r\n      <div class=\"container name\">DOODLE MASTER by Doodlis</div>\r\n      <div class=\"container\">\r\n        {categoriesAndItems.length === 0 ? <div>Loading...</div> :\r\n        Object.keys(categoriesAndItems).map((category) => {\r\n          return <div class=\"genericButton button\" onClick={() => handleCategoryClick(category)}>{category}</div>\r\n        }\r\n        )}\r\n      </div>\r\n      <div class=\"container\">\r\n        {selectedCategory.length === 0 ? <div></div> :\r\n        selectedCategory.map((item) => {\r\n          return <div class=\"genericButton itemButton \" onClick={() => handleItemClick(item)}>{item}</div>\r\n        }\r\n        )}\r\n      </div>\r\n\r\n      {selectedItem.length === 0 ? <div></div> :\r\n      <div className=\"imageUploads container\">\r\n        <ImageUploading\r\n          multiple\r\n          value={images}\r\n          onChange={onChange}\r\n          maxNumber={maxNumber}\r\n          dataURLKey=\"data_url\"\r\n        >\r\n          {({\r\n            imageList,\r\n            onImageUpload,\r\n            onImageRemoveAll,\r\n            onImageUpdate,\r\n            onImageRemove,\r\n            isDragging,\r\n            dragProps,\r\n          }) => (\r\n            // write your building UI\r\n            <div className=\"upload__image-wrapper\">\r\n              <button\r\n                className=\"genericButton imageButtons\"\r\n                // style={isDragging ? { color: 'red' } : undefined}\r\n                onClick={onImageUpload}\r\n                {...dragProps}\r\n              >\r\n                Click or Drop here\r\n              </button>\r\n              &nbsp;\r\n\r\n              {imageList.map((image, index) => (\r\n                <div key={index} className=\"image-item container\">\r\n                  <img src={image['data_url']} alt=\"\" width=\"800px\" />\r\n                  <div className=\"image-item__btn-wrapper\">\r\n                    <button className=\"genericButton imageButtons\" onClick={() => onImageUpdate(index)}>Update</button>\r\n                    <button className=\"genericButton imageButtons\" onClick={() => onImageRemove(index)}>Remove</button>\r\n                    <button className=\"genericButton imageButtons\" onClick={() => onImageGetScores(image)}>Get Score</button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </ImageUploading>\r\n      </div>}\r\n      <div class=\"container\">{score == null ? null : <div className=\"genericButton result\">{score ? Math.round(score) + '% of this looks like a ' + selectedItem : \"Try drawing it again!\"}</div>}</div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\V\\Kornelija\\MVP\\Front-End\\src\\statistics.js",["36","37"],{"ruleId":"38","severity":1,"message":"39","line":1,"column":18,"nodeType":"40","messageId":"41","endLine":1,"endColumn":22},{"ruleId":"38","severity":1,"message":"42","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":20},{"ruleId":"38","severity":1,"message":"43","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":24},{"ruleId":"38","severity":1,"message":"44","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"38","severity":1,"message":"45","line":2,"column":10,"nodeType":"40","messageId":"41","endLine":2,"endColumn":16},{"ruleId":"38","severity":1,"message":"46","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"38","severity":1,"message":"45","line":3,"column":10,"nodeType":"40","messageId":"41","endLine":3,"endColumn":16},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'DrawingsPage' is defined but never used.","'ImageUploadsPage' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'useState' is defined but never used."]